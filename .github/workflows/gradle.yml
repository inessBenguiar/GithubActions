# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      - name: Install dependencies
        run: ./gradlew clean build

      - name: Run Tests
        run: ./gradlew test

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: build/test-results/

      - name: Run Cucumber Report
        run: ./gradlew cucumber

      - name: Upload Cucumber Report
        uses: actions/upload-artifact@v2
        with:
          name: cucumber-report
          path: build/reports/cucumber/

      - name: Publish JUnit Results
        uses: actions/upload-artifact@v2
        with:
          name: junit-results
          path: build/test-results/test/TEST-Matrix.xml

  code-analysis:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      - name: Run SonarQube Analysis
        run: ./gradlew sonarqube -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN

  code-quality:
    runs-on: ubuntu-latest
    needs: code-analysis

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Wait for Quality Gate
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: code-quality

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      - name: Build and Javadoc
        run: |
          ./gradlew build
          ./gradlew javadoc

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/libs/*.jar

      - name: Upload Javadoc
        uses: actions/upload-artifact@v2
        with:
          name: javadoc
          path: build/docs/
