name: Java Test with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  pipeline:
    runs-on: ubuntu-latest

    steps:
    
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permissions to gradlew
        run: chmod +x gradlew

  
      - name: Run Gradle tests
        run: ./gradlew test

      # Archiver les résultats JUnit
      - name: Archive JUnit test results
        uses: actions/upload-artifact@v3
        with:
          name: junit-results
          path: build/test-results/test/

      # Archiver le rapport Cucumber
      - name: Archive Cucumber report (if exists)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cucumber-report
          path: reports/example-report.json
          
      # Vérifier si les artefacts ont bien été créés
      - name: List build directory for verification
        run: ls -R build/

      - name: Install jq
        run: sudo apt-get install -y jq

      # Vérifier le statut du Quality Gate
      - name: Check Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          STATUS=$(curl -s -u $SONAR_TOKEN: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=inessBenguiar_GitActions-test" \
          | jq -r '.projectStatus.status')
          echo "Quality Gate Status: $STATUS"
          if [ "$STATUS" != "OK" ]; then
            echo "Quality Gate failed!"
            exit 1
          fi
      
      - name: Grant execute permissions to gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build

      - name: Generate Javadoc
        run: ./gradlew javadoc

      - name: Archive JAR artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-jars
          path: build/libs/*.jar

      - name: Archive Javadoc docs
        uses: actions/upload-artifact@v3
        with:
          name: build-docs
          path: build/docs/

  #    - name: Déploiement du fichier jar sur myMavenRepo
   #     run: ./gradlew publish
    #    env:
   #       MYMAVENREPO_USERNAME: ${{ secrets.MAVEN_USERNAME }}
     #     MYMAVENREPO_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

      - name: Slack Notification
        if: always() 
        uses: slackapi/slack-github-action@v1.24.0  
        with:
          payload: |
            {
              "text": "*Workflow Status: ${{ job.status }}*\n${{ github.workflow }} workflow completed.\nRepository: ${{ github.repository }}\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 

      - name: Send email notification
        if: always() 
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Workflow ${{ github.workflow }} Status: ${{ job.status }}" 
          body: "The workflow ${{ github.workflow }} has completed with status: ${{ job.status }}.\nView the run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          to: ${{ secrets.EMAIL_TO }}
          from: GitHub Actions
          content_type: text/plain

       

            

     

