name: Java Test with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v4

      # Configurer Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Ajouter Gradle Wrapper
      - name: Grant execute permissions to gradlew
        run: chmod +x gradlew

      # Exécuter les tests Gradle
      - name: Run Gradle tests
        run: ./gradlew test

      # Archiver les résultats JUnit
      - name: Archive JUnit test results
        uses: actions/upload-artifact@v3
        with:
          name: junit-results
          path: build/test-results/test/

      # Archiver le rapport Cucumber 
      - name: Archive Cucumber report (if exists)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cucumber-report
          path: reports/example-report.json
          
      # Vérifier si les artefacts ont bien été créés
      - name: List build directory for verification
        run: ls -R build/
      
      # Étape 7 : Télécharger les artefacts générés par SonarQube
      - name: Upload SonarQube reports
        uses: actions/upload-artifact@v3
        with:
          name: sonar-reports
          path: build/sonar-report
